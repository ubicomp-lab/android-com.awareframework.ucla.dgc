apply plugin: 'com.android.application'

android {
    //We'll set the variables that are set by Jenkins here
    compileSdkVersion compile_sdk
    buildToolsVersion build_tools

    defaultConfig {
        applicationId "com.aware.android.ucla.dgc"
        minSdkVersion minimum_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName version_readable

        //AWARE core sensors SyncAdapters
        resValue "string", "provider_accelerometer", android.defaultConfig.applicationId + ".provider.accelerometer"
        resValue "string", "provider_applications", android.defaultConfig.applicationId + ".provider.applications"
        resValue "string", "provider_aware", android.defaultConfig.applicationId + ".provider.aware"
        resValue "string", "provider_barometer", android.defaultConfig.applicationId + ".provider.barometer"
        resValue "string", "provider_battery", android.defaultConfig.applicationId + ".provider.battery"
        resValue "string", "provider_bluetooth", android.defaultConfig.applicationId + ".provider.bluetooth"
        resValue "string", "provider_communication", android.defaultConfig.applicationId + ".provider.communication"
        resValue "string", "provider_esm", android.defaultConfig.applicationId + ".provider.esm"
        resValue "string", "provider_gravity", android.defaultConfig.applicationId + ".provider.gravity"
        resValue "string", "provider_gyroscope", android.defaultConfig.applicationId + ".provider.gyroscope"
        resValue "string", "provider_installations", android.defaultConfig.applicationId + ".provider.installations"
        resValue "string", "provider_keyboard", android.defaultConfig.applicationId + ".provider.keyboard"
        resValue "string", "provider_light", android.defaultConfig.applicationId + ".provider.light"
        resValue "string", "provider_linear_accelerometer", android.defaultConfig.applicationId + ".provider.accelerometer.linear"
        resValue "string", "provider_locations", android.defaultConfig.applicationId + ".provider.locations"
        resValue "string", "provider_magnetometer", android.defaultConfig.applicationId + ".provider.magnetometer"
        resValue "string", "provider_network", android.defaultConfig.applicationId + ".provider.network"
        resValue "string", "provider_processor", android.defaultConfig.applicationId + ".provider.processor"
        resValue "string", "provider_proximity", android.defaultConfig.applicationId + ".provider.proximity"
        resValue "string", "provider_rotation", android.defaultConfig.applicationId + ".provider.rotation"
        resValue "string", "provider_screen", android.defaultConfig.applicationId + ".provider.screen"
        resValue "string", "provider_significant", android.defaultConfig.applicationId + ".provider.significant"
        resValue "string", "provider_telephony", android.defaultConfig.applicationId + ".provider.telephony"
        resValue "string", "provider_temperature", android.defaultConfig.applicationId + ".provider.temperature"
        resValue "string", "provider_timezones", android.defaultConfig.applicationId + ".provider.timezone"
        resValue "string", "provider_traffic", android.defaultConfig.applicationId + ".provider.traffic"
        resValue "string", "provider_wifi", android.defaultConfig.applicationId + ".provider.wifi"

        //Bundled plugins provider authority overrides
        resValue "string", "provider_conversations", android.defaultConfig.applicationId + ".provider.audio_final"
        resValue "string", "provider_google_activity_recognition", android.defaultConfig.applicationId + ".provider.gar"
        resValue "string", "provider_google_fused", android.defaultConfig.applicationId + ".provider.geofences"
    }

    //Conversations plugin uses a native library, add support to importing that library
    splits {
        abi {
            enable true
            reset()
            include 'armeabi'
        }
    }

    //we are signing the package using Jenkins, so we'll add it as a parameter for this application.
    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    //ignore documentation parsing errors
    lintOptions {
        abortOnError false
    }
}

//adding Jenkins certificate parameters
if (System.getenv("storeFile") != null && System.getenv("storePassword") != null && System.getenv("keyAlias") != null && System.getenv("keyPassword") != null) {
    android.signingConfigs.release.storeFile = file(System.getenv("storeFile"))
    android.signingConfigs.release.storePassword = System.getenv("storePassword")
    android.signingConfigs.release.keyAlias = System.getenv("keyAlias")
    android.signingConfigs.release.keyPassword = System.getenv("keyPassword")
} else {
    println("No keystore defined. Unsigned!")
    android.buildTypes.release.signingConfig = null
}

//adding AWARE's library to this project
repositories {
    maven { url "https://jitpack.io" }
}

//Tell android studio to always try to get the latest version of the framework from JitPack.io
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    //add all the dependencies we need. the $ variables are set via Jenkins and, if not using it, from the project build.gradle
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //adding AWARE now as a dependency
    api "com.github.denzilferreira:aware-client:$aware_libs" //set by the project build.gradle/Jenkins

    //we add more plugins we want bundled after this. Let's compile now.
    //UCLA needs: activity recognition, fused location plugins, conversations
    api "com.github.denzilferreira:com.aware.plugin.google.activity_recognition:$aware_libs"
    api "com.github.denzilferreira:com.aware.plugin.google.fused_location:$aware_libs"
    api "com.github.denzilferreira:com.aware.plugin.studentlife.audio_final:$aware_libs"
    api "com.github.denzilferreira:com.aware.plugin.esm.scheduler:$aware_libs"
}
